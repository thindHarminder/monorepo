name: Release Workflow

on:
  pull_request_target:
    types: [closed]
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

jobs:
  check_changes:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  deploy_embed:
    needs: check_changes
    if: needs.check_changes.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1.5.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ vars.CLOUDFLARE_FRONTEND_PROJECT_NAME }}
          directory: frontend/dist
          branch: main

  deploy_server:
    needs: check_changes
    if: needs.check_changes.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Deploy API Server
        uses: cloudflare/wrangler-action@v3
        with:
          workingDirectory: "backend"
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --minify src/index.ts --compatibility-flags='nodejs_compat'
